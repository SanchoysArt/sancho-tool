from telethon import events
from telethon.tl.types import Message

class SwatModule:
    def __init__(self, client):
        self.client = client
        self.enabled = False
        self.translate_map = {
            ord("–∑"): "3", ord("–µ"): "3", ord("–ï"): "3", ord("–ó"): "3", ord("z"): "3",
            ord("–æ"): "0", ord("o"): "0", ord("–∏"): "u", ord("–ò"): "U", ord("i"): "1",
            ord("–ê"): "4", ord("–∞"): "4", ord("a"): "4", ord("A"): "4",
        }
    
    def register(self):
        @self.client.on(events.NewMessage(pattern=r'\.ebal$', outgoing=True))
        async def swat_handler(event):
            """–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º swat"""
            self.enabled = not self.enabled
            
            if self.enabled:
                await event.edit("ü§ç **–†–µ–∂–∏–º swat –≤–∫–ª—é—á–µ–Ω** ü§ç")
            else:
                await event.edit("‚ùå **–†–µ–∂–∏–º swat –≤—ã–∫–ª—é—á–µ–Ω**")
        
        @self.client.on(events.NewMessage(pattern=r'\.swat ', outgoing=True))
        async def swat_text_handler(event):
            """–≠–≤–∞—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç (–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)"""
            reply = await event.get_reply_message()
            if not reply or not reply.text:
                await event.edit("‚ùå **–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º**")
                return
            
            translated_text = reply.text.translate(self.translate_map)
            await event.edit(f"**–≠–≤–∞—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:**\n\n{translated_text}")
        
        @self.client.on(events.NewMessage(outgoing=True))
        async def message_watcher(event):
            """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —ç–≤–∞—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
            if self.enabled and event.text and not event.text.startswith('.'):
                translated_text = event.text.translate(self.translate_map)
                if event.text != translated_text:
                    await event.edit(translated_text)

def register(client):
    swat_module = SwatModule(client)
    swat_module.register()
