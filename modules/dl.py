import asyncio
from telethon import events

def register(client):
    auto_delete_settings = {}
    deletion_tasks = {}

    @client.on(events.NewMessage(pattern=r"\.dl (\d+)$", outgoing=True))
    async def auto_delete_on(event):
        """–í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è"""
        try:
            seconds = int(event.pattern_match.group(1))
            
            if seconds < 5:
                await event.edit("‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: 5 —Å–µ–∫—É–Ω–¥")
                return
                
            if seconds > 86400:  # 24 —á–∞—Å–∞
                await event.edit("‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: 86400 —Å–µ–∫—É–Ω–¥ (24 —á–∞—Å–∞)")
                return
            
            chat_id = event.chat_id
            auto_delete_settings[chat_id] = seconds
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
            if seconds < 60:
                time_str = f"{seconds} —Å–µ–∫"
            elif seconds < 3600:
                time_str = f"{seconds//60} –º–∏–Ω {seconds%60} —Å–µ–∫"
            else:
                hours = seconds // 3600
                minutes = (seconds % 3600) // 60
                time_str = f"{hours} —á–∞—Å {minutes} –º–∏–Ω"
            
            await event.edit(f"‚úÖ –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ\n‚è∞ –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç —É–¥–∞–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑: {time_str}")
            
        except ValueError:
            await event.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö\n–ü—Ä–∏–º–µ—Ä: `.dl 60` - —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É")

    @client.on(events.NewMessage(pattern=r"\.dl off$", outgoing=True))
    async def auto_delete_off(event):
        """–í—ã–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è"""
        chat_id = event.chat_id
        
        if chat_id in auto_delete_settings:
            del auto_delete_settings[chat_id]
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞—á—É –µ—Å–ª–∏ –µ—Å—Ç—å
            if chat_id in deletion_tasks:
                deletion_tasks[chat_id].cancel()
                del deletion_tasks[chat_id]
            
            await event.edit("üî¥ –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ")
        else:
            await event.edit("‚ÑπÔ∏è –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –∏ —Ç–∞–∫ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ –≤ —ç—Ç–æ–º —á–∞—Ç–µ")

    @client.on(events.NewMessage(pattern=r"\.dl status$", outgoing=True))
    async def auto_delete_status(event):
        """–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è"""
        chat_id = event.chat_id
        
        if chat_id in auto_delete_settings:
            seconds = auto_delete_settings[chat_id]
            
            if seconds < 60:
                time_str = f"{seconds} —Å–µ–∫—É–Ω–¥"
            elif seconds < 3600:
                time_str = f"{seconds//60} –º–∏–Ω—É—Ç {seconds%60} —Å–µ–∫—É–Ω–¥"
            else:
                hours = seconds // 3600
                minutes = (seconds % 3600) // 60
                time_str = f"{hours} —á–∞—Å–æ–≤ {minutes} –º–∏–Ω—É—Ç"
            
            await event.edit(f"üü¢ –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ\n‚è∞ –í—Ä–µ–º—è: {time_str}")
        else:
            await event.edit("üî¥ –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ")

    @client.on(events.NewMessage(pattern=r"\.dl help$", outgoing=True))
    async def auto_delete_help(event):
        """–ü–æ–º–æ—â—å –ø–æ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—é"""
        help_text = (
            "üóëÔ∏è **Auto Delete Help:**\n\n"
            "**.dl <—Å–µ–∫—É–Ω–¥—ã>** - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ\n"
            "**.dl off** - –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ\n"
            "**.dl status** - –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è\n"
            "**.dl help** - –≠—Ç–∞ –ø–æ–º–æ—â—å\n\n"
            "**–ü—Ä–∏–º–µ—Ä—ã:**\n"
            "`.dl 60` - –£–¥–∞–ª—è—Ç—å —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É\n"
            "`.dl 300` - –£–¥–∞–ª—è—Ç—å —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç\n"
            "`.dl 3600` - –£–¥–∞–ª—è—Ç—å —á–µ—Ä–µ–∑ 1 —á–∞—Å\n\n"
            "‚ö†Ô∏è –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
        )
        await event.edit(help_text)

    @client.on(events.NewMessage(outgoing=True))
    async def handle_auto_delete(event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
        chat_id = event.chat_id
        
        if chat_id in auto_delete_settings and not event.text.startswith('.dl'):
            seconds = auto_delete_settings[chat_id]
            message_id = event.id
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É —É–¥–∞–ª–µ–Ω–∏—è
            deletion_tasks[message_id] = asyncio.create_task(
                delete_message_after_delay(client, chat_id, message_id, seconds)
            )

    async def delete_message_after_delay(client, chat_id, message_id, delay):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É"""
        await asyncio.sleep(delay)
        
        try:
            await client.delete_messages(chat_id, message_id)
        except Exception as e:
            print(f"Error deleting message: {e}")
        finally:
            if message_id in deletion_tasks:
                del deletion_tasks[message_id]

    print("‚úÖ –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω")
